/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_URC_PB_H_INCLUDED
#define PB_URC_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ArmClawRequest { 
    bool has_clawVelTicksPerSecond;
    int32_t clawVelTicksPerSecond;
} ArmClawRequest;

/* Reports the encoder ticks for each arm joint */
typedef struct _ArmEncodersMessage { 
    int32_t shoulderLiftTicks;
    int32_t shouldSwivelTicks;
    int32_t elbowLiftTicks;
    int32_t elbowSwivelTicks;
    int32_t wristLiftTicks;
    int32_t wristSwivelTicks;
} ArmEncodersMessage;

typedef struct _ArmFeedback { 
    int64_t shoulderPosTicks;
    int64_t shoulderVelTicksPerSecond;
    int64_t shoulderCurrentAmps;
    int64_t bicepPosTicks;
    int64_t bicepVelTicksPerSecond;
    int64_t bicepCurrentAmps;
    int64_t elbowPosTicks;
    int64_t elbowVelTicksPerSecond;
    int64_t elbowCurrentAmps;
    int64_t wristPosTicks;
    int64_t wristVelTicksPerSecond;
    int64_t wristCurrentAmps;
    int64_t clawPosTicks;
    int64_t clawVelTicksPerSecond;
    int64_t clawCurrentAmps;
} ArmFeedback;

typedef struct _ArmPositionRequest { 
    int64_t shoulderTicks;
    int64_t bicepTicks;
    int64_t elbowTicks;
    int64_t wristTicks;
    int64_t clawTicks;
} ArmPositionRequest;

typedef struct _BatteryMessage { 
    /* cell voltages */
    bool has_mainVoltage;
    float mainVoltage;
    bool has_cell1Voltage;
    float cell1Voltage;
    bool has_cell2Voltage;
    float cell2Voltage;
    bool has_cell3Voltage;
    float cell3Voltage;
    bool has_cell4Voltage;
    float cell4Voltage;
    bool has_cell5Voltage;
    float cell5Voltage;
    bool has_cell6Voltage;
    float cell6Voltage;
    bool has_cell7Voltage;
    float cell7Voltage;
    bool has_cell8Voltage;
    float cell8Voltage;
    /* charge state */
    bool has_chargePercentage;
    float chargePercentage;
    /* discharge state */
    bool has_dischargeCurrent;
    float dischargeCurrent;
} BatteryMessage;

typedef struct _DriveCurrentRequest { 
    bool has_leftCurrentAmps;
    float leftCurrentAmps;
    bool has_rightCurrentAmps;
    float rightCurrentAmps;
} DriveCurrentRequest;

typedef struct _DriveFeedback { 
    bool has_leftPosTicks;
    int64_t leftPosTicks;
    bool has_rightPosTicks;
    int64_t rightPosTicks;
    bool has_leftVelTicksPerSecond;
    int64_t leftVelTicksPerSecond;
    bool has_rightVelTicksPerSecond;
    int64_t rightVelTicksPerSecond;
    bool has_leftCurrentAmps;
    int64_t leftCurrentAmps;
    bool has_rightCurrentAmps;
    int64_t rightCurrentAmps;
} DriveFeedback;

typedef struct _DrivetrainRequest { 
    int32_t m1Setpoint;
    int32_t m2Setpoint;
    int32_t m3Setpoint;
    int32_t m4Setpoint;
    int32_t m5Setpoint;
    int32_t m6Setpoint;
} DrivetrainRequest;

typedef struct _IMUMessage { 
    int32_t timestamp;
    bool has_quaternionX;
    float quaternionX;
    bool has_quaternionY;
    float quaternionY;
    bool has_quaternionZ;
    float quaternionZ;
    bool has_quaternionW;
    float quaternionW;
    bool has_linearAccelX;
    float linearAccelX;
    bool has_linearAccelY;
    float linearAccelY;
    bool has_linearAccelZ;
    float linearAccelZ;
    bool has_angularVelocityX;
    float angularVelocityX;
    bool has_angularVelocityY;
    float angularVelocityY;
    bool has_angularVelocityZ;
    float angularVelocityZ;
} IMUMessage;

typedef struct _NewStatusLightCommand { 
    int32_t redEnabled;
    int32_t blueEnabled;
    int32_t greenEnabled;
    int32_t redBlink;
    int32_t blueBlink;
    int32_t greenBlink;
} NewStatusLightCommand;

typedef struct _RequestMessage { 
    bool requestSpeed;
    bool requestDiagnostics;
    bool has_leftSpeed;
    int32_t leftSpeed;
    bool has_rightSpeed;
    int32_t rightSpeed;
    bool has_duration;
    int32_t duration;
    int32_t timestamp;
} RequestMessage;

typedef struct _ScienceModuleCommand { 
    int32_t rotateTurntable;
} ScienceModuleCommand;

typedef struct _StatusLightCommand { 
    bool has_color;
    int32_t color;
    bool has_display;
    int32_t display;
} StatusLightCommand;

typedef struct _StatusLightRequest { 
    bool has_color;
    int32_t color;
    bool has_blink;
    bool blink;
} StatusLightRequest;

typedef struct _TeensyMessage { 
    int32_t messageID;
    int32_t m1Setpoint;
    int32_t m2Setpoint;
    int32_t m3Setpoint;
    int32_t m4Setpoint;
    int32_t m5Setpoint;
    int32_t m6Setpoint;
    int32_t redEnabled;
    int32_t blueEnabled;
    int32_t greenEnabled;
    int32_t redBlink;
    int32_t blueBlink;
    int32_t greenBlink;
} TeensyMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ArmEncodersMessage_init_default          {0, 0, 0, 0, 0, 0}
#define DrivetrainRequest_init_default           {0, 0, 0, 0, 0, 0}
#define NewStatusLightCommand_init_default       {0, 0, 0, 0, 0, 0}
#define TeensyMessage_init_default               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define RequestMessage_init_default              {0, 0, false, 0, false, 0, false, 0, 0}
#define IMUMessage_init_default                  {0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define BatteryMessage_init_default              {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define StatusLightCommand_init_default          {false, 0, false, 0}
#define ScienceModuleCommand_init_default        {0}
#define DriveCurrentRequest_init_default         {false, 0, false, 0}
#define StatusLightRequest_init_default          {false, 0, false, 0}
#define ArmPositionRequest_init_default          {0, 0, 0, 0, 0}
#define ArmClawRequest_init_default              {false, 0}
#define DriveFeedback_init_default               {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define ArmFeedback_init_default                 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define ArmEncodersMessage_init_zero             {0, 0, 0, 0, 0, 0}
#define DrivetrainRequest_init_zero              {0, 0, 0, 0, 0, 0}
#define NewStatusLightCommand_init_zero          {0, 0, 0, 0, 0, 0}
#define TeensyMessage_init_zero                  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define RequestMessage_init_zero                 {0, 0, false, 0, false, 0, false, 0, 0}
#define IMUMessage_init_zero                     {0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define BatteryMessage_init_zero                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define StatusLightCommand_init_zero             {false, 0, false, 0}
#define ScienceModuleCommand_init_zero           {0}
#define DriveCurrentRequest_init_zero            {false, 0, false, 0}
#define StatusLightRequest_init_zero             {false, 0, false, 0}
#define ArmPositionRequest_init_zero             {0, 0, 0, 0, 0}
#define ArmClawRequest_init_zero                 {false, 0}
#define DriveFeedback_init_zero                  {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define ArmFeedback_init_zero                    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ArmClawRequest_clawVelTicksPerSecond_tag 1
#define ArmEncodersMessage_shoulderLiftTicks_tag 1
#define ArmEncodersMessage_shouldSwivelTicks_tag 2
#define ArmEncodersMessage_elbowLiftTicks_tag    3
#define ArmEncodersMessage_elbowSwivelTicks_tag  4
#define ArmEncodersMessage_wristLiftTicks_tag    5
#define ArmEncodersMessage_wristSwivelTicks_tag  6
#define ArmFeedback_shoulderPosTicks_tag         1
#define ArmFeedback_shoulderVelTicksPerSecond_tag 2
#define ArmFeedback_shoulderCurrentAmps_tag      3
#define ArmFeedback_bicepPosTicks_tag            4
#define ArmFeedback_bicepVelTicksPerSecond_tag   5
#define ArmFeedback_bicepCurrentAmps_tag         6
#define ArmFeedback_elbowPosTicks_tag            7
#define ArmFeedback_elbowVelTicksPerSecond_tag   8
#define ArmFeedback_elbowCurrentAmps_tag         9
#define ArmFeedback_wristPosTicks_tag            10
#define ArmFeedback_wristVelTicksPerSecond_tag   11
#define ArmFeedback_wristCurrentAmps_tag         12
#define ArmFeedback_clawPosTicks_tag             13
#define ArmFeedback_clawVelTicksPerSecond_tag    14
#define ArmFeedback_clawCurrentAmps_tag          15
#define ArmPositionRequest_shoulderTicks_tag     1
#define ArmPositionRequest_bicepTicks_tag        2
#define ArmPositionRequest_elbowTicks_tag        3
#define ArmPositionRequest_wristTicks_tag        4
#define ArmPositionRequest_clawTicks_tag         5
#define BatteryMessage_mainVoltage_tag           1
#define BatteryMessage_cell1Voltage_tag          2
#define BatteryMessage_cell2Voltage_tag          3
#define BatteryMessage_cell3Voltage_tag          4
#define BatteryMessage_cell4Voltage_tag          5
#define BatteryMessage_cell5Voltage_tag          6
#define BatteryMessage_cell6Voltage_tag          7
#define BatteryMessage_cell7Voltage_tag          8
#define BatteryMessage_cell8Voltage_tag          9
#define BatteryMessage_chargePercentage_tag      10
#define BatteryMessage_dischargeCurrent_tag      11
#define DriveCurrentRequest_leftCurrentAmps_tag  1
#define DriveCurrentRequest_rightCurrentAmps_tag 2
#define DriveFeedback_leftPosTicks_tag           1
#define DriveFeedback_rightPosTicks_tag          2
#define DriveFeedback_leftVelTicksPerSecond_tag  3
#define DriveFeedback_rightVelTicksPerSecond_tag 4
#define DriveFeedback_leftCurrentAmps_tag        5
#define DriveFeedback_rightCurrentAmps_tag       6
#define DrivetrainRequest_m1Setpoint_tag         1
#define DrivetrainRequest_m2Setpoint_tag         2
#define DrivetrainRequest_m3Setpoint_tag         3
#define DrivetrainRequest_m4Setpoint_tag         4
#define DrivetrainRequest_m5Setpoint_tag         5
#define DrivetrainRequest_m6Setpoint_tag         6
#define IMUMessage_timestamp_tag                 1
#define IMUMessage_quaternionX_tag               2
#define IMUMessage_quaternionY_tag               3
#define IMUMessage_quaternionZ_tag               4
#define IMUMessage_quaternionW_tag               5
#define IMUMessage_linearAccelX_tag              6
#define IMUMessage_linearAccelY_tag              7
#define IMUMessage_linearAccelZ_tag              8
#define IMUMessage_angularVelocityX_tag          9
#define IMUMessage_angularVelocityY_tag          10
#define IMUMessage_angularVelocityZ_tag          11
#define NewStatusLightCommand_redEnabled_tag     1
#define NewStatusLightCommand_blueEnabled_tag    2
#define NewStatusLightCommand_greenEnabled_tag   3
#define NewStatusLightCommand_redBlink_tag       4
#define NewStatusLightCommand_blueBlink_tag      5
#define NewStatusLightCommand_greenBlink_tag     6
#define RequestMessage_requestSpeed_tag          1
#define RequestMessage_requestDiagnostics_tag    2
#define RequestMessage_leftSpeed_tag             3
#define RequestMessage_rightSpeed_tag            4
#define RequestMessage_duration_tag              5
#define RequestMessage_timestamp_tag             6
#define ScienceModuleCommand_rotateTurntable_tag 1
#define StatusLightCommand_color_tag             1
#define StatusLightCommand_display_tag           2
#define StatusLightRequest_color_tag             1
#define StatusLightRequest_blink_tag             2
#define TeensyMessage_messageID_tag              1
#define TeensyMessage_m1Setpoint_tag             2
#define TeensyMessage_m2Setpoint_tag             3
#define TeensyMessage_m3Setpoint_tag             4
#define TeensyMessage_m4Setpoint_tag             5
#define TeensyMessage_m5Setpoint_tag             6
#define TeensyMessage_m6Setpoint_tag             7
#define TeensyMessage_redEnabled_tag             8
#define TeensyMessage_blueEnabled_tag            9
#define TeensyMessage_greenEnabled_tag           10
#define TeensyMessage_redBlink_tag               11
#define TeensyMessage_blueBlink_tag              12
#define TeensyMessage_greenBlink_tag             13

/* Struct field encoding specification for nanopb */
#define ArmEncodersMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    shoulderLiftTicks,   1) \
X(a, STATIC,   REQUIRED, INT32,    shouldSwivelTicks,   2) \
X(a, STATIC,   REQUIRED, INT32,    elbowLiftTicks,    3) \
X(a, STATIC,   REQUIRED, INT32,    elbowSwivelTicks,   4) \
X(a, STATIC,   REQUIRED, INT32,    wristLiftTicks,    5) \
X(a, STATIC,   REQUIRED, INT32,    wristSwivelTicks,   6)
#define ArmEncodersMessage_CALLBACK NULL
#define ArmEncodersMessage_DEFAULT NULL

#define DrivetrainRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    m1Setpoint,        1) \
X(a, STATIC,   REQUIRED, INT32,    m2Setpoint,        2) \
X(a, STATIC,   REQUIRED, INT32,    m3Setpoint,        3) \
X(a, STATIC,   REQUIRED, INT32,    m4Setpoint,        4) \
X(a, STATIC,   REQUIRED, INT32,    m5Setpoint,        5) \
X(a, STATIC,   REQUIRED, INT32,    m6Setpoint,        6)
#define DrivetrainRequest_CALLBACK NULL
#define DrivetrainRequest_DEFAULT NULL

#define NewStatusLightCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    redEnabled,        1) \
X(a, STATIC,   REQUIRED, INT32,    blueEnabled,       2) \
X(a, STATIC,   REQUIRED, INT32,    greenEnabled,      3) \
X(a, STATIC,   REQUIRED, INT32,    redBlink,          4) \
X(a, STATIC,   REQUIRED, INT32,    blueBlink,         5) \
X(a, STATIC,   REQUIRED, INT32,    greenBlink,        6)
#define NewStatusLightCommand_CALLBACK NULL
#define NewStatusLightCommand_DEFAULT NULL

#define TeensyMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    messageID,         1) \
X(a, STATIC,   REQUIRED, INT32,    m1Setpoint,        2) \
X(a, STATIC,   REQUIRED, INT32,    m2Setpoint,        3) \
X(a, STATIC,   REQUIRED, INT32,    m3Setpoint,        4) \
X(a, STATIC,   REQUIRED, INT32,    m4Setpoint,        5) \
X(a, STATIC,   REQUIRED, INT32,    m5Setpoint,        6) \
X(a, STATIC,   REQUIRED, INT32,    m6Setpoint,        7) \
X(a, STATIC,   REQUIRED, INT32,    redEnabled,        8) \
X(a, STATIC,   REQUIRED, INT32,    blueEnabled,       9) \
X(a, STATIC,   REQUIRED, INT32,    greenEnabled,     10) \
X(a, STATIC,   REQUIRED, INT32,    redBlink,         11) \
X(a, STATIC,   REQUIRED, INT32,    blueBlink,        12) \
X(a, STATIC,   REQUIRED, INT32,    greenBlink,       13)
#define TeensyMessage_CALLBACK NULL
#define TeensyMessage_DEFAULT NULL

#define RequestMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     requestSpeed,      1) \
X(a, STATIC,   REQUIRED, BOOL,     requestDiagnostics,   2) \
X(a, STATIC,   OPTIONAL, INT32,    leftSpeed,         3) \
X(a, STATIC,   OPTIONAL, INT32,    rightSpeed,        4) \
X(a, STATIC,   OPTIONAL, INT32,    duration,          5) \
X(a, STATIC,   REQUIRED, INT32,    timestamp,         6)
#define RequestMessage_CALLBACK NULL
#define RequestMessage_DEFAULT NULL

#define IMUMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    timestamp,         1) \
X(a, STATIC,   OPTIONAL, FLOAT,    quaternionX,       2) \
X(a, STATIC,   OPTIONAL, FLOAT,    quaternionY,       3) \
X(a, STATIC,   OPTIONAL, FLOAT,    quaternionZ,       4) \
X(a, STATIC,   OPTIONAL, FLOAT,    quaternionW,       5) \
X(a, STATIC,   OPTIONAL, FLOAT,    linearAccelX,      6) \
X(a, STATIC,   OPTIONAL, FLOAT,    linearAccelY,      7) \
X(a, STATIC,   OPTIONAL, FLOAT,    linearAccelZ,      8) \
X(a, STATIC,   OPTIONAL, FLOAT,    angularVelocityX,   9) \
X(a, STATIC,   OPTIONAL, FLOAT,    angularVelocityY,  10) \
X(a, STATIC,   OPTIONAL, FLOAT,    angularVelocityZ,  11)
#define IMUMessage_CALLBACK NULL
#define IMUMessage_DEFAULT NULL

#define BatteryMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    mainVoltage,       1) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell1Voltage,      2) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell2Voltage,      3) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell3Voltage,      4) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell4Voltage,      5) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell5Voltage,      6) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell6Voltage,      7) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell7Voltage,      8) \
X(a, STATIC,   OPTIONAL, FLOAT,    cell8Voltage,      9) \
X(a, STATIC,   OPTIONAL, FLOAT,    chargePercentage,  10) \
X(a, STATIC,   OPTIONAL, FLOAT,    dischargeCurrent,  11)
#define BatteryMessage_CALLBACK NULL
#define BatteryMessage_DEFAULT NULL

#define StatusLightCommand_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    color,             1) \
X(a, STATIC,   OPTIONAL, INT32,    display,           2)
#define StatusLightCommand_CALLBACK NULL
#define StatusLightCommand_DEFAULT NULL

#define ScienceModuleCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    rotateTurntable,   1)
#define ScienceModuleCommand_CALLBACK NULL
#define ScienceModuleCommand_DEFAULT NULL

#define DriveCurrentRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    leftCurrentAmps,   1) \
X(a, STATIC,   OPTIONAL, FLOAT,    rightCurrentAmps,   2)
#define DriveCurrentRequest_CALLBACK NULL
#define DriveCurrentRequest_DEFAULT NULL

#define StatusLightRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    color,             1) \
X(a, STATIC,   OPTIONAL, BOOL,     blink,             2)
#define StatusLightRequest_CALLBACK NULL
#define StatusLightRequest_DEFAULT NULL

#define ArmPositionRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    shoulderTicks,     1) \
X(a, STATIC,   REQUIRED, INT64,    bicepTicks,        2) \
X(a, STATIC,   REQUIRED, INT64,    elbowTicks,        3) \
X(a, STATIC,   REQUIRED, INT64,    wristTicks,        4) \
X(a, STATIC,   REQUIRED, INT64,    clawTicks,         5)
#define ArmPositionRequest_CALLBACK NULL
#define ArmPositionRequest_DEFAULT NULL

#define ArmClawRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    clawVelTicksPerSecond,   1)
#define ArmClawRequest_CALLBACK NULL
#define ArmClawRequest_DEFAULT NULL

#define DriveFeedback_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT64,    leftPosTicks,      1) \
X(a, STATIC,   OPTIONAL, INT64,    rightPosTicks,     2) \
X(a, STATIC,   OPTIONAL, INT64,    leftVelTicksPerSecond,   3) \
X(a, STATIC,   OPTIONAL, INT64,    rightVelTicksPerSecond,   4) \
X(a, STATIC,   OPTIONAL, INT64,    leftCurrentAmps,   5) \
X(a, STATIC,   OPTIONAL, INT64,    rightCurrentAmps,   6)
#define DriveFeedback_CALLBACK NULL
#define DriveFeedback_DEFAULT NULL

#define ArmFeedback_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT64,    shoulderPosTicks,   1) \
X(a, STATIC,   REQUIRED, INT64,    shoulderVelTicksPerSecond,   2) \
X(a, STATIC,   REQUIRED, INT64,    shoulderCurrentAmps,   3) \
X(a, STATIC,   REQUIRED, INT64,    bicepPosTicks,     4) \
X(a, STATIC,   REQUIRED, INT64,    bicepVelTicksPerSecond,   5) \
X(a, STATIC,   REQUIRED, INT64,    bicepCurrentAmps,   6) \
X(a, STATIC,   REQUIRED, INT64,    elbowPosTicks,     7) \
X(a, STATIC,   REQUIRED, INT64,    elbowVelTicksPerSecond,   8) \
X(a, STATIC,   REQUIRED, INT64,    elbowCurrentAmps,   9) \
X(a, STATIC,   REQUIRED, INT64,    wristPosTicks,    10) \
X(a, STATIC,   REQUIRED, INT64,    wristVelTicksPerSecond,  11) \
X(a, STATIC,   REQUIRED, INT64,    wristCurrentAmps,  12) \
X(a, STATIC,   REQUIRED, INT64,    clawPosTicks,     13) \
X(a, STATIC,   REQUIRED, INT64,    clawVelTicksPerSecond,  14) \
X(a, STATIC,   REQUIRED, INT64,    clawCurrentAmps,  15)
#define ArmFeedback_CALLBACK NULL
#define ArmFeedback_DEFAULT NULL

extern const pb_msgdesc_t ArmEncodersMessage_msg;
extern const pb_msgdesc_t DrivetrainRequest_msg;
extern const pb_msgdesc_t NewStatusLightCommand_msg;
extern const pb_msgdesc_t TeensyMessage_msg;
extern const pb_msgdesc_t RequestMessage_msg;
extern const pb_msgdesc_t IMUMessage_msg;
extern const pb_msgdesc_t BatteryMessage_msg;
extern const pb_msgdesc_t StatusLightCommand_msg;
extern const pb_msgdesc_t ScienceModuleCommand_msg;
extern const pb_msgdesc_t DriveCurrentRequest_msg;
extern const pb_msgdesc_t StatusLightRequest_msg;
extern const pb_msgdesc_t ArmPositionRequest_msg;
extern const pb_msgdesc_t ArmClawRequest_msg;
extern const pb_msgdesc_t DriveFeedback_msg;
extern const pb_msgdesc_t ArmFeedback_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ArmEncodersMessage_fields &ArmEncodersMessage_msg
#define DrivetrainRequest_fields &DrivetrainRequest_msg
#define NewStatusLightCommand_fields &NewStatusLightCommand_msg
#define TeensyMessage_fields &TeensyMessage_msg
#define RequestMessage_fields &RequestMessage_msg
#define IMUMessage_fields &IMUMessage_msg
#define BatteryMessage_fields &BatteryMessage_msg
#define StatusLightCommand_fields &StatusLightCommand_msg
#define ScienceModuleCommand_fields &ScienceModuleCommand_msg
#define DriveCurrentRequest_fields &DriveCurrentRequest_msg
#define StatusLightRequest_fields &StatusLightRequest_msg
#define ArmPositionRequest_fields &ArmPositionRequest_msg
#define ArmClawRequest_fields &ArmClawRequest_msg
#define DriveFeedback_fields &DriveFeedback_msg
#define ArmFeedback_fields &ArmFeedback_msg

/* Maximum encoded size of messages (where known) */
#define ArmClawRequest_size                      11
#define ArmEncodersMessage_size                  66
#define ArmFeedback_size                         165
#define ArmPositionRequest_size                  55
#define BatteryMessage_size                      55
#define DriveCurrentRequest_size                 10
#define DriveFeedback_size                       66
#define DrivetrainRequest_size                   66
#define IMUMessage_size                          61
#define NewStatusLightCommand_size               66
#define RequestMessage_size                      48
#define ScienceModuleCommand_size                11
#define StatusLightCommand_size                  22
#define StatusLightRequest_size                  13
#define TeensyMessage_size                       143

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
