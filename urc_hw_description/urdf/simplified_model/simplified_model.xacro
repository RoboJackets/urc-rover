<?xml version="1.0"?>
<robot name="six_wheel_simplified" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.4" />
    <xacro:property name="base_length" value="0.8" />
    <xacro:property name="base_height" value="0.18" />
    <xacro:property name="base_mass" value="1.0" />

    <xacro:property name="wheel_radius" value="0.08" />
    <xacro:property name="wheel_thickness" value="0.04" />
    <xacro:property name="wheel_mass" value="0.05" />
    <xacro:property name="wheel_gap_y" value="0.025" />
    <xacro:property name="wheel_offset_z" value="0.05" />
    <xacro:property name="wheel_offset_x" value="0.12" />

    <xacro:include filename="inertial_macros.xacro" />

    <!-- Define gazebo system joints -->
    <ros2_control name="GazeboSystem" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        <joint name="left_front_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>

        <joint name="right_front_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>

        <joint name="left_center_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>

        <joint name="right_center_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>

        <joint name="left_rear_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>

        <joint name="right_rear_wheel_joint">
            <command_interface name="velocity">
                <param name="min">-10</param>
                <param name="max">10</param>
            </command_interface>
            <state_interface name="velocity" />
            <state_interface name="position" />
        </joint>
    </ros2_control>

    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
            <parameters>$(find urc_bringup)/config/ros2_control_walli.yaml</parameters>
        </plugin>
    </gazebo>

    <!-- Robot Base -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
            <material name="Orange">
                <color rgba="1.0 0.3 0.1 1.0" />
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </collision>
        <xacro:box_inertia m="${base_mass}" w="${base_width}" d="${base_length}" h="${base_height}" />
    </link>
    <gazebo reference="base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- Robot Footprint -->
    <link name="base_footprint"></link>
    <joint name="base_joint" type="fixed">
        <parent link="base_link" />
        <child link="base_footprint" />
        <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_offset_z)}" rpy="0 0 0" />
    </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_mult y_reflect">
        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin
                xyz="${x_mult*wheel_offset_x} ${-y_reflect*(base_width/2+wheel_gap_y)} ${-wheel_offset_z}"
                rpy="${y_reflect*pi/2} 0 0" />
            <axis xyz="0 0 ${-y_reflect}" />
        </joint>

        <link name="${prefix}_link">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
                </geometry>
                <material name="Gray">
                    <color rgba="0.5 0.5 0.5 1.0" />
                </material>
            </visual>

            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
                </geometry>
            </collision>

            <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_thickness}" />
        </link>
    </xacro:macro>

    <xacro:wheel prefix="left_front_wheel" x_mult="-2" y_reflect="1" />
    <xacro:wheel prefix="left_center_wheel" x_mult="0" y_reflect="1" />
    <xacro:wheel prefix="left_rear_wheel" x_mult="2" y_reflect="1" />
    <xacro:wheel prefix="right_front_wheel" x_mult="-2" y_reflect="-1" />
    <xacro:wheel prefix="right_center_wheel" x_mult="0" y_reflect="-1" />
    <xacro:wheel prefix="right_rear_wheel" x_mult="2" y_reflect="-1" />

    <!-- GPS -->
    <link name="gps">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="0.05 0.05 0.05" />
            </geometry>
        </collision>
    </link>
    <joint name="gps_joint" type="fixed">
        <axis xyz="1 0 0" />
        <origin xyz="00 0 0" />
        <parent link="base_link" />
        <child link="gps" />
    </joint>
    <gazebo reference="gps">
        <sensor name="gps" type="gps">
            <plugin filename="libgazebo_ros_gps_sensor.so" name="gps_plugin">
                <ros>
                    <namespace>/gps</namespace>
                    <remapping>~/out:=data</remapping>
                </ros>
                <frame_name>gps</frame_name>
            </plugin>
            <always_on>true</always_on>
            <updateRate>30</updateRate>
        </sensor>
    </gazebo>

    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </collision>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu_link" />
        <origin xyz="0 0 0.01" />
    </joint>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <ros>
                    <remapping>~/out:=imu/data</remapping>
                </ros>
                <initial_orientation_as_reference>false</initial_orientation_as_reference>
            </plugin>
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>


    <link name="lidar_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="0.125" />
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.0508" length="0.055" />
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.0508" length="0.055" />
            </geometry>
        </visual>
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="lidar_link" />
        <origin xyz="0 0 0.12" rpy="0 0 0" />
    </joint>

    <gazebo reference="lidar_link">
        <sensor name="lidar" type="ray">
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1.000000</resolution>
                        <min_angle>0.000000</min_angle>
                        <max_angle>6.280000</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.120000</min>
                    <max>3.5</max>
                    <resolution>0.015000</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <remapping>~/out:=scan/data</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <link name="camera_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.015 0.130 0.022" />
            </geometry>
        </visual>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.015 0.130 0.022" />
            </geometry>
        </collision>

        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="0.035" />
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
        </inertial>
    </link>

    <joint name="camera_joint" type="fixed">
        <parent link="base_link" />
        <child link="camera_link" />
        <origin xyz="0.215 0 0.05" rpy="0 0 0" />
    </joint>

    <link name="camera_depth_frame" />

    <joint name="camera_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
        <parent link="camera_link" />
        <child link="camera_depth_frame" />
    </joint>

    <gazebo reference="camera_link">
        <sensor name="depth_camera" type="depth">
            <visualize>true</visualize>
            <update_rate>30.0</update_rate>
            <camera name="camera">
                <horizontal_fov>1.047198</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>3</far>
                </clip>
            </camera>
            <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
                <baseline>0.2</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <frame_name>camera_depth_frame</frame_name>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
                <distortionK1>0</distortionK1>
                <distortionK2>0</distortionK2>
                <distortionK3>0</distortionK3>
                <distortionT1>0</distortionT1>
                <distortionT2>0</distortionT2>
                <CxPrime>0</CxPrime>
                <Cx>0</Cx>
                <Cy>0</Cy>
                <focalLength>0</focalLength>
                <hackBaseline>0</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>
</robot>